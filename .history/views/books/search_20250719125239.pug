extends ../layout

block content
    div.container
        // Search Header
        div.mb-4
            div.d-flex.justify-content-between.align-items-center
                h1 Search Results
                div.d-flex.gap-2
                    // Sort by
                    select.form-select.form-select-sm(id='sort-select' name='sort')
                        option(value='relevance' selected=(sort === 'relevance')) Relevance
                        option(value='newest' selected=(sort === 'newest')) Newest
                        option(value='price' selected=(sort === 'price')) Price (Low to High)
                        option(value='price-desc' selected=(sort === 'price-desc')) Price (High to Low)
                    // Apply Button
                    button.btn.btn-outline-secondary(id='apply-btn') Apply

        // Search Form
        form(method='GET' action='/books/search' class='mb-4')
            div.input-group
                input.form-control(type='text' name='query' placeholder='Search for books...' value=query)
                button.btn.btn-primary(type='submit') Search

        // Search Results
        div.row.g-4
            if books && books.length > 0
                each book in books
                    div.col-md-3
                        div.book-card.card.h-100
                            // Book Cover
                            div.position-relative
                                img.card-img-top(src=book.coverImage alt=book.title style='height: 300px; object-fit: cover;')
                                // Book Condition Badge
                                div.position-absolute.top-0.start-0.p-2
                                    span.badge.bg-info #{book.condition || 'New'}
                            div.card-body.d-flex.flex-column
                                // Book Info
                                div.book-info.flex-grow-1
                                    h5.card-title #{book.title || 'Unknown Title'}
                                    p.card-text.text-muted Author: #{book.author || 'Unknown Author'}
                                    if book.description
                                        p.card-text.text-muted #{book.description.substring(0, 100)}...
                                    else
                                        p.card-text.text-muted No description available
                                    div.d-flex.justify-content-between.align-items-center.mb-3
                                        span.text-primary 
                                            if (book.price && book.price !== 'Not available')
                                                | Price: #{book.price}
                                            else
                                                | Price: Not available
                                // Action Buttons
                                div.book-actions.d-flex.gap-2
                                    if user
                                        form(method='POST' action=`/books/${book.id}/add-to-cart` class='d-inline')
                                            button.btn.btn-sm.btn-outline-primary(type='submit') Add to Cart
                                    else
                                        a.btn.btn-sm.btn-outline-primary(href='/auth/login') Sign in to add
                                    a.btn.btn-sm.btn-primary(href=`/books/${book.id}`) View Details
            else
                div.col-12.text-center
                    h3 No books found
                    p.text-muted Try searching with different keywords or filters
                    form(method='GET' action='/books/search' class='mt-4')
                        div.input-group
                            input.form-control(type='text' name='query' placeholder='Try a different search' value=query)
                            button.btn.btn-primary(type='submit') Search Again

        // Pagination (Always show)
        nav.aria-label='Page navigation'
            ul.pagination.justify-content-center
                if pagination.hasPrevious
                    li.page-item
                        a.page-link(href=`/books/search?q=${encodeURIComponent(query)}&sort=${sort}&page=${pagination.previousPage}`) Previous
                li.page-item
                    span.page-link Page #{pagination.currentPage} of #{pagination.totalPages}
                if pagination.hasNext
                    li.page-item
                        a.page-link(href=`/books/search?q=${encodeURIComponent(query)}&sort=${sort}&page=${pagination.nextPage}`) Next

    // Add CSS for search results page
    style.
        :root {
            --cream: #f5f0e8;
            --muted-orange: #d4a373;
            --dusty-blue: #7895b2;
            --olive-green: #8a9a5b;
            --warm-gray: #7a7a7a;
            --shadow-light: 0 4px 6px rgba(0, 0, 0, 0.1);
            --shadow-dark: 0 8px 12px rgba(0, 0, 0, 0.15);
        }

        .book-card {
            border: none;
            box-shadow: var(--shadow-light);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            display: flex;
            flex-direction: column;
        }

        .book-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-dark);
        }

        .book-card .card-img-top {
            border-radius: 0.5rem 0.5rem 0 0;
            transition: transform 0.3s ease;
        }

        .book-card:hover .card-img-top {
            transform: scale(1.02);
        }

        .book-card .card-body {
            flex: 1 0 auto;
            padding: 1.5rem;
        }

        .book-info {
            flex: 1 0 auto;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .book-card h5.card-title {
            font-size: 1.1rem;
            margin-bottom: 0.5rem;
            line-height: 1.4;
            height: 4.2rem;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .book-card p.card-text {
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
            line-height: 1.4;
            height: 2.8rem;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .book-actions {
            margin-top: auto;
            padding-top: 1rem;
            border-top: 1px solid var(--cream);
        }

        .book-card .btn {
            padding: 0.375rem 0.75rem;
            font-size: 0.875rem;
            border-radius: 0.375rem;
            flex: 1;
        }

        .book-card .btn-primary {
            background-color: var(--muted-orange);
            border-color: var(--muted-orange);
        }

        .book-card .btn-primary:hover {
            background-color: #cc7a00;
            color: white;
        }

        .book-card .btn-outline-primary {
            color: var(--muted-orange);
            border-color: var(--muted-orange);
        }

        .book-card .btn-outline-primary:hover {
            background-color: var(--muted-orange);
            color: white;
        }

        .badge.bg-info {
            background-color: var(--olive-green) !important;
            color: white !important;
            font-size: 0.875rem;
            padding: 0.375rem 0.75rem;
        }

        @media (max-width: 768px) {
            .book-card .card-body {
                padding: 1rem;
            }

            .book-card .btn {
                width: 100%;
                margin-bottom: 0.5rem;
            }

            .book-card .btn:last-child {
                margin-bottom: 0;
            }

            .book-actions {
                flex-direction: column;
                gap: 0.5rem;
            }
        }

        @media (max-width: 576px) {
            .book-card {
                margin-bottom: 1rem;
            }

            .book-card h5.card-title {
                font-size: 1rem;
            }

            .book-card p.card-text {
                font-size: 0.875rem;
            }
        }

    // Add JavaScript for Apply Button
    script.
        document.addEventListener('DOMContentLoaded', function() {
            const applyBtn = document.getElementById('apply-btn');
            const sortSelect = document.getElementById('sort-select');
            const query = '#{query}';

            if (applyBtn && sortSelect) {
                applyBtn.addEventListener('click', function() {
                    const sort = sortSelect.value;
                    window.location.href = `/books/search?q=${encodeURIComponent(query)}&sort=${sort}&page=1`;
                });

                // Add keyboard support
                sortSelect.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        applyBtn.click();
                    }
                });
            }
        });
